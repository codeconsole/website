buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:7.0.0-SNAPSHOT"
    }
}

plugins {
    id "com.bertramlabs.asset-pipeline" version "5.0.1"
    id "com.github.erdi.webdriver-binaries" version "3.2"
    id "war"
    id "idea"
    id "application"
}
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"

group = "website"

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

// Temporary exclusions for unneeded dependencies
configurations {
    all {
        exclude group: "org.grails", module: "grails-web-sitemesh" // org.grails.plugins:async:7.0.0-SNAPSHOT
        exclude group: "opensymphony", module: "sitemesh" //org.grails.plugins:async:7.0.0-SNAPSHOT
        exclude group: "org.glassfish.jaxb", module: "jaxb-runtime"
        exclude group: "org.apache.groovy", module: "groovy-ant"
        exclude group: "org.junit.jupiter", module: "junit-jupiter-api"
        exclude group: "org.apache.ant", module: "ant"
    }
}

dependencies {
    profile "org.grails.profiles:web"
    implementation("org.grails:grails-core")
    implementation("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors")
    implementation("org.grails:grails-plugin-rest")
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings")
    implementation("org.grails:grails-web-boot")
    implementation("org.grails.plugins:gsp")
    implementation("org.grails.plugins:hibernate5")
    implementation("org.grails.plugins:scaffolding")
    implementation("org.sitemesh:grails-plugin-sitemesh3:7.0.0-SNAPSHOT")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-tomcat")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation "org.grails.plugins:spring-security-core:7.0.0-SNAPSHOT"
    console("org.grails:grails-console")
    runtimeOnly("com.bertramlabs.plugins:asset-pipeline-grails:5.0.1")
    runtimeOnly("com.h2database:h2")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    runtimeOnly("org.fusesource.jansi:jansi:1.18")
}

application {
    mainClass.set("website.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
    systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
}

// requires JetBrains Java
// https://github.com/HotswapProjects/HotswapAgent/releases
// sdk install java 21.0.4-jbr
// mkdir ~/.sdkman/candidates/java/21.0.4-jbr/lib/hotswap/
// cp lib/hotswap-agent-2.0.1.jar ~/.sdkman/candidates/java/21.0.4-jbr/lib/hotswap/hotswap-agent.jar
bootRun {
    jvmArgs(
            '-XX:+AllowEnhancedClassRedefinition',
            '-javaagent:lib/groovyReset.jar',
            '-XX:HotswapAgent=fatjar')
}